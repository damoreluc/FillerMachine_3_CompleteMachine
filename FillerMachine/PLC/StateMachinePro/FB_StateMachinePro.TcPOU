<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_StateMachinePro" Id="{628eea9b-d3a1-4a41-bcf1-9872281aa285}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_StateMachinePro
VAR_INPUT	
	bEnable : BOOL;
	bStart : BOOL;
	bStop : BOOL;
	
	bBottle : BOOL;				// fotocellula FC1
END_VAR

VAR_OUTPUT
	eStep :  E_Step;
	tStepTime : TIME;
	eErrStep : E_Step;
	nErrId : DINT;
	
	bConveyor : BOOL;			// nastro trasportatore
	bWater : BOOL;				// riempimento acqua
	bMint : BOOL;				// riempimento menta	
	bCorking : BOOL;			// inserimento del tappo	
END_VAR

VAR_IN_OUT
	
END_VAR

VAR
	bInitialized :  BOOL;
	eNewstep :  E_Step;
	bEntryact :  BOOL;
	fbTonStep :  TON;	
	
	fbTonBottle : TON;
	fbRtBottle : R_TRIG;
	
	fbRtStop : R_TRIG;
	bStopRequest : BOOL;
	
	nFillingCycles : USINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bInitialized THEN
	eNewstep := E_Step.NoStep;
	eStep := E_Step.Stop;
	bEntryact := FALSE;
	bInitialized := TRUE;		
ELSE	
	(* disabilitata o avaria *)
	IF NOT bEnable THEN
		eNewstep := E_Step.NeOrError;
	END_IF;
	
	IF eNewstep <> E_Step.NoStep THEN
		eStep := eNewstep;
		eNewstep := E_Step.NoStep;
		bEntryact := FALSE;
	END_IF;

	(* filtri *)
	fbTonBottle(IN:= bBottle, PT:= T#500MS);		// filtro sensore presenza bottiglia
	
	(* fronti *)
	fbRtBottle(CLK:= fbTonBottle.Q);
	fbRtStop(CLK:= bStop);
	
	(* richieste *)
	IF fbRtStop.Q THEN
		bStopRequest := TRUE;
	END_IF; 
	
	CASE eStep OF
		
		(* not Enabled or Error *)
		E_Step.NeOrError :
			(* entry action *)
			IF NOT bEntryact THEN
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := FALSE;
			bWater := FALSE;
			bMint := FALSE;
			bCorking := FALSE;
			
			nFillingCycles := 0;
					
			(* transition *)
			IF bEnable THEN				
				eNewstep := E_Step.Stop;				
			END_IF;

			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				;
			END_IF;		
			
		(* Stop *)
		E_Step.Stop:
			(* entry action *)
			IF NOT bEntryact THEN
				bStopRequest := FALSE;
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := FALSE;
			bWater := FALSE;
			bMint := FALSE;
			bCorking := FALSE;
			
			nFillingCycles := 0;
				
			(* transition *)
			IF bStart THEN
				eNewstep := E_Step.Feeding;
			END_IF
			
			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				;
			END_IF;
			
		(* Feeding *)
		E_Step.Feeding:
			(* entry action *)
			IF NOT bEntryact THEN
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := TRUE;
			bWater := FALSE;
			bMint := FALSE;
			bCorking := FALSE;
		
			(* transition *)
			IF bStopRequest AND NOT bBottle THEN
				eNewstep := E_Step.Stopping;
			ELSE
				IF fbRtBottle.Q THEN
					eNewstep := E_Step.WaterFilling;
				END_IF
			END_IF
			
			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				;
			END_IF;
			
		(* Water Filling *)
		E_Step.WaterFilling:
			(* entry action *)
			IF NOT bEntryact THEN
				nFillingCycles := nFillingCycles + 1;
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := FALSE;
			bWater := TRUE;
			bMint := FALSE;
			bCorking := FALSE;
		
			(* transition *)
			IF tStepTime >= T#1S500MS THEN
				eNewstep := E_Step.MintFilling;
			END_IF
			
			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				;
			END_IF;
			
		(* Mint Filling *)
		E_Step.MintFilling:
			(* entry action *)
			IF NOT bEntryact THEN
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := FALSE;
			bWater := FALSE;
			bMint := TRUE;
			bCorking := FALSE;
		
			(* transition *)
			IF tStepTime >= T#500MS THEN
				IF nFillingCycles >= 3 THEN
					eNewstep := E_Step.Waiting1;
				ELSE 
					eNewstep := E_Step.WaterFilling;
				END_IF
					
			END_IF
			
			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				IF eNewstep = E_Step.Waiting1 THEN
					nFillingCycles := 0;
				END_IF
			END_IF;	

		(* Waiting 1 *)
		E_Step.Waiting1:
			(* entry action *)
			IF NOT bEntryact THEN
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := FALSE;
			bWater := FALSE;
			bMint := FALSE;
			bCorking := FALSE;
		
			(* transition *)
			IF tStepTime >= T#1S THEN
				eNewstep := E_Step.Corking;
			END_IF
			
			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				;
			END_IF;	

		(* Corking *)
		E_Step.Corking:
			(* entry action *)
			IF NOT bEntryact THEN
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := FALSE;
			bWater := FALSE;
			bMint := FALSE;
			bCorking := TRUE;
		
			(* transition *)
			IF tStepTime >= T#3S THEN
				eNewstep := E_Step.Waiting2;
			END_IF
			
			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				;
			END_IF;

		(* Waiting 2 *)
		E_Step.Waiting2:
			(* entry action *)
			IF NOT bEntryact THEN
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := FALSE;
			bWater := FALSE;
			bMint := FALSE;
			bCorking := FALSE;
		
			(* transition *)
			IF tStepTime >= T#1S THEN
				eNewstep := E_Step.Feeding;
			END_IF
			
			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				;
			END_IF;

		(* Stopping *)
		E_Step.Stopping:
			(* entry action *)
			IF NOT bEntryact THEN
				bEntryact := TRUE;
			END_IF;

			(* body *)
			bConveyor := FALSE;
			bWater := tStepTime >= T#200MS AND tStepTime <= T#400MS;
			bMint := tStepTime >= T#200MS AND tStepTime <= T#400MS;
			bCorking := FALSE;
		
			(* transition *)
			IF tStepTime >= T#2S THEN
				eNewstep := E_Step.Stop;
			END_IF; 
			
			(* exitact *)
			IF eNewstep <> E_Step.NoStep THEN
				;
			END_IF;		
		ELSE
			eNewstep := E_Step.NeOrError;
			eErrStep := E_Step.Unknown;
			nErrId := -9;			
	END_CASE;
	
	(* tempo di permanenza nello step *)
	fbTonStep(IN := (eNewstep = E_Step.NoStep), PT := T#500H);
	tStepTime := fbTonStep.ET;
	
END_IF;

]]></ST>
    </Implementation>
    <LineIds Name="FB_StateMachinePro">
      <LineId Id="43" Count="15" />
      <LineId Id="546" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="548" Count="1" />
      <LineId Id="581" Count="0" />
      <LineId Id="550" Count="0" />
      <LineId Id="577" Count="0" />
      <LineId Id="579" Count="1" />
      <LineId Id="582" Count="2" />
      <LineId Id="578" Count="0" />
      <LineId Id="576" Count="0" />
      <LineId Id="61" Count="8" />
      <LineId Id="438" Count="2" />
      <LineId Id="437" Count="0" />
      <LineId Id="606" Count="1" />
      <LineId Id="70" Count="3" />
      <LineId Id="76" Count="5" />
      <LineId Id="106" Count="4" />
      <LineId Id="585" Count="0" />
      <LineId Id="111" Count="0" />
      <LineId Id="113" Count="2" />
      <LineId Id="442" Count="2" />
      <LineId Id="441" Count="0" />
      <LineId Id="608" Count="1" />
      <LineId Id="119" Count="0" />
      <LineId Id="122" Count="0" />
      <LineId Id="515" Count="2" />
      <LineId Id="125" Count="0" />
      <LineId Id="127" Count="1" />
      <LineId Id="132" Count="1" />
      <LineId Id="338" Count="1" />
      <LineId Id="136" Count="6" />
      <LineId Id="445" Count="2" />
      <LineId Id="143" Count="2" />
      <LineId Id="519" Count="1" />
      <LineId Id="544" Count="1" />
      <LineId Id="555" Count="1" />
      <LineId Id="518" Count="0" />
      <LineId Id="148" Count="0" />
      <LineId Id="150" Count="1" />
      <LineId Id="597" Count="0" />
      <LineId Id="156" Count="5" />
      <LineId Id="601" Count="0" />
      <LineId Id="162" Count="3" />
      <LineId Id="448" Count="2" />
      <LineId Id="166" Count="2" />
      <LineId Id="557" Count="2" />
      <LineId Id="172" Count="2" />
      <LineId Id="178" Count="1" />
      <LineId Id="357" Count="0" />
      <LineId Id="359" Count="7" />
      <LineId Id="451" Count="2" />
      <LineId Id="367" Count="2" />
      <LineId Id="561" Count="0" />
      <LineId Id="598" Count="0" />
      <LineId Id="603" Count="0" />
      <LineId Id="602" Count="0" />
      <LineId Id="562" Count="0" />
      <LineId Id="600" Count="0" />
      <LineId Id="599" Count="0" />
      <LineId Id="560" Count="0" />
      <LineId Id="370" Count="2" />
      <LineId Id="604" Count="1" />
      <LineId Id="373" Count="0" />
      <LineId Id="358" Count="0" />
      <LineId Id="455" Count="14" />
      <LineId Id="564" Count="1" />
      <LineId Id="563" Count="0" />
      <LineId Id="470" Count="3" />
      <LineId Id="454" Count="0" />
      <LineId Id="475" Count="14" />
      <LineId Id="567" Count="1" />
      <LineId Id="566" Count="0" />
      <LineId Id="490" Count="3" />
      <LineId Id="474" Count="0" />
      <LineId Id="496" Count="14" />
      <LineId Id="570" Count="1" />
      <LineId Id="569" Count="0" />
      <LineId Id="511" Count="3" />
      <LineId Id="495" Count="0" />
      <LineId Id="522" Count="14" />
      <LineId Id="541" Count="2" />
      <LineId Id="537" Count="3" />
      <LineId Id="521" Count="0" />
      <LineId Id="299" Count="1" />
      <LineId Id="593" Count="0" />
      <LineId Id="595" Count="0" />
      <LineId Id="302" Count="5" />
      <LineId Id="9" Count="0" />
      <LineId Id="650" Count="0" />
      <LineId Id="649" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>